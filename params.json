{"name":"PSTreeGraph","body":"\r\n# PSTreeGraph\r\n\r\nPSTreeGraph is a treegraph view control implementation for Cocoa Touch.\r\n\r\nThis is a port of the sample code from Max OS X to iOS (iPad). \r\nWWDC 2010 Session 141, “Crafting Custom Cocoa Views”\r\n\r\n![](http://farm7.static.flickr.com/6193/6055022105_ab831b2d8e.jpg)\r\n\r\n\r\n# Example Project\r\n\r\nThere is an iPad example application to demonstrate the features of PSTreeGraph.\r\n\r\n\r\n# Status\r\n\r\nPSTreeGraph should be considered an viable solution for displaying single parent tree data in an interactive hierarchy.\r\n\r\nThis project follows the [SemVer](http://semver.org/) standard. The API may change in backwards-incompatible ways before the 1.0 release.\r\n\r\nThe goal of PSTreeGraph is to build a high-quality UI control designed specifically for the iPad.  The inspiration / structure comes from WWDC 2010 Session 141, “Crafting Custom Cocoa Views”, an extremely valuable and informative presentation that has proven to be applicable (see this project) to other platforms.\r\n\r\n\r\n# Getting Started\r\n\r\nSee [Wiki](https://github.com/epreston/PSTreeGraph/wiki).\r\n\r\nUseful information can also be found in the issues log. The following discussions might be helpful. If you can't find what you are looking for, start a new topic.\r\n\r\n* [Display hierarchical data from xml or json](https://github.com/epreston/PSTreeGraph/issues/9)\r\n* [Can you select arbitrary nodes?](https://github.com/epreston/PSTreeGraph/issues/5)\r\n* [Customizing the leaf view](https://github.com/epreston/PSTreeGraph/issues/7)\r\n\r\n\r\n# Known Improvements\r\n\r\nSee [Milestones](https://github.com/epreston/PSTreeGraph/issues/milestones?with_issues=no).\r\n\r\nThere are many places where PSTreeGraph could be improved:\r\n\r\n* Use GCD to load model data asyncronously.  This control uses a simple protocol implemented by each node in the data model so the control can walk the tree. This can be loaded asynchronously to avoid blocking the main thread when displaying large graphs.\r\n\r\n* Cache the bezier path used to render lines in each subtree.  The bezier path used to render the lines between each node in the graph can be cached to improve performance.\r\n\r\n* Use CATiledLayer to support much larger graphs.  Investigate using a CATiledLayer to further reduce drawing and memory usage, support scaling, etc. This feature will make it possible support graphs of unlimited size and scale. Rendering time and resource usage would be constant regardless of the number of nodes in the graph.\r\n\r\n\r\n# Documentation\r\n\r\nYou can generate documentation with [doxygen](http://www.doxygen.org). The example project includes a documentation build target to do this within Xcode.    For more details, see the [Documentation](https://github.com/epreston/PSTreeGraph/wiki/Documentation) page in this projects wiki.\r\n\r\n\r\n# Copyright and License\r\n\r\nCopyright 2010 Preston Software.\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this work except in compliance with the License.\r\n   You may obtain a copy of the License in the LICENSE file, or at:\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n\r\n\r\n","tagline":"A tree graph view control for iPad applications.  This is a port of the sample code from Max OS X to iOS (iPad).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}